<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="szu.dao.UpdateDao">
  <resultMap id="BaseResultMap" type="szu.model.Update">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="dateTime" jdbcType="TIMESTAMP" property="datetime" />
    <result column="urls" jdbcType="VARCHAR" property="urls" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
  </resultMap>
  <insert id="insert">
      insert into `update` (uid, title, content, status, type, dateTime, urls, pid)
      values (#{uid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
              #{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{datetime,jdbcType=TIMESTAMP},
              #{urls,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER})
  </insert>
  <update id="update">
    update `update`
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="datetime != null">
        dateTime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="urls != null">
        urls = #{urls,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteById">
    delete from `update`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="findAll" resultMap="BaseResultMap">
      select *
      from `update`
  </select>
  <select id="findByType" resultMap="BaseResultMap">
    select
    *
    from `update`
    where type = #{type,jdbcType=INTEGER}
  </select>
  <select id="findByUid" resultMap="BaseResultMap">
    select
    *
    from `update`
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <select id="findByPid" resultMap="BaseResultMap">
    select
    *
    from `update`
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <select id="findById" resultMap="BaseResultMap">
      select *
      from `update`
      where id = #{id,jdbcType=INTEGER}
  </select>

</mapper>