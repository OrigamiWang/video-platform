<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="szu.dao.UpdatesDao">
    <resultMap id="BaseResultMap" type="szu.model.Updates">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="dateTime" jdbcType="TIMESTAMP" property="datetime"/>
        <result column="urls" jdbcType="VARCHAR" property="urls"/>
    </resultMap>

    <insert id="insert">
        insert into updates (uid, title, content, type, dateTime, urls)
        values (#{uid}, #{title}, #{content}, #{type}, #{dateTime}, #{urls})
    </insert>
    <update id="update">
        update updates
        set uid = #{uid},
            title = #{title},
            content = #{content},
            type = #{type},
            dateTime = #{dateTime},
            urls = #{urls}
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete
        from updates
        where id = #{id}
    </delete>
    <select id="findAll" resultType="szu.model.Updates">
        select *
        from updates
    </select>
    <select id="findByType" resultType="szu.model.Updates">
        select *
        from updates
        where type = #{type}
    </select>
    <select id="findById" resultType="szu.model.Updates">
        select *
        from updates
        where id = #{id}
    </select>

</mapper>